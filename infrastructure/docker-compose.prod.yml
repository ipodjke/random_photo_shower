version: '3.3'

volumes:
  postgres_data:
  static_value:
  media_value:

services:
  db:
    image: postgres:12.0-alpine
    container_name: 'db-prod'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/envfiles/.env.prod
    networks: 
      - project_network

  backend:
    build:
      context: ../backend
      dockerfile: ./Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    container_name: 'backend-prod'
    restart: always
    volumes:
      - ../data:/usr/src/app/data
      - static_value:/usr/src/app/backend/static_django
      - media_value:/usr/src/app/backend/media
    env_file:
      - ../backend/envfiles/.env.prod
    depends_on:
      - db
    networks: 
      - project_network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.prod
    container_name: 'frontend-prod'
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/:/app/
      - static_value:/var/html/static_django/
      - media_value:/var/html/static/
    depends_on:
      - backend
    networks:
      - project_network

networks:
  project_network:
    driver: bridge
